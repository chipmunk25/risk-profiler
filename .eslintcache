[{"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\index.js":"1","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\reportWebVitals.js":"2","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\registerServiceWorker.js":"3","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\NextApp.js":"4","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\styles\\vendors\\style.js":"5","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\App\\index.js":"6","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\store\\index.js":"7","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\history\\index.js":"8","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\App\\MainApp.js":"9","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\auth.js":"10","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\index.js":"11","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\SignIn\\index.js":"12","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\constants.js":"13","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\index.js":"14","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\Auth.js":"15","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\people.js":"16","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\products.js":"17","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\ledgers.js":"18","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\stocks.js":"19","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\sales.js":"20","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Header\\index.js":"21","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\index.js":"22","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\SignIn\\login.js":"23","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\common.js":"24","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\Auth.js":"25","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\common.js":"26","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\stocks.js":"27","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\products.js":"28","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\people.js":"29","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\ledgers.js":"30","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\sales.js":"31","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\Settings.js":"32","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\people.js":"33","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\products.js":"34","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\ledgers.js":"35","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\stocks.js":"36","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\sales.js":"37","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\users.js":"38","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\ledgers.js":"39","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\products.js":"40","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\people.js":"41","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\stocks.js":"42","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\sales.js":"43","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Header\\CompanyDetails.js":"44","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\Setting.js":"45","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\ThemeSetting.js":"46","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\SidebarContent.js":"47","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\SignIn\\loginform.js":"48","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\utils\\Auxiliary.js":"49","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\root.js":"50","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\AppsNavigation.js":"51","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\UserProfile.js":"52","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\SidebarLogo.js":"53","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\utils\\CustomScrollbars.js":"54","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\index.js":"55","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Loading\\index.js":"56","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Alert\\notification.js":"57","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Alert\\message.js":"58","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\index.js":"59","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\header.js":"60","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\EcommerceStatus.js":"61","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\BalanceHistory.js":"62","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\dashboardtops.js":"63","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\utils\\DashColor.js":"64","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\AppNotification\\index.js":"65","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\MailNotification\\index.js":"66","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\AppNotification\\data.js":"67","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\AppNotification\\NotificationItem.js":"68","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\MailNotification\\NotificationItem.js":"69","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\MailNotification\\data.js":"70","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Widget\\index.js":"71","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\UserInfo\\index.js":"72","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Customer\\index.js":"73","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Customer\\Create.js":"74","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Customer\\Edit.js":"75","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Modals\\index.js":"76","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\PageContent\\index.js":"77","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Datatable\\index.js":"78","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\PageHeader\\index.js":"79","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Searchbox\\index.js":"80","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\ActionTools\\index.js":"81","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\index.js":"82","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorType\\index.js":"83","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorDescription\\index.js":"84","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorType\\Create.js":"85","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorType\\Edit.js":"86","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorDescription\\Edit.js":"87","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorDescription\\Create.js":"88","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\Indicator\\index.js":"89","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\Indicator\\Create.js":"90","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\Indicator\\Edit.js":"91","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\indicator.js":"92","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\indicator.js":"93","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\indicator.js":"94","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\indicator.js":"95"},{"size":525,"mtime":1614264325406,"results":"96","hashOfConfig":"97"},{"size":362,"mtime":1613408423284,"results":"98","hashOfConfig":"97"},{"size":4495,"mtime":1614264325684,"results":"99","hashOfConfig":"97"},{"size":747,"mtime":1614264325523,"results":"100","hashOfConfig":"97"},{"size":248,"mtime":1614264311721,"results":"101","hashOfConfig":"97"},{"size":1801,"mtime":1614264312422,"results":"102","hashOfConfig":"97"},{"size":888,"mtime":1614264288784,"results":"103","hashOfConfig":"97"},{"size":121,"mtime":1614264287434,"results":"104","hashOfConfig":"97"},{"size":910,"mtime":1614264312418,"results":"105","hashOfConfig":"97"},{"size":2875,"mtime":1614264287223,"results":"106","hashOfConfig":"97"},{"size":517,"mtime":1614324893933,"results":"107","hashOfConfig":"97"},{"size":2649,"mtime":1614264312531,"results":"108","hashOfConfig":"97"},{"size":15558,"mtime":1614327369187,"results":"109","hashOfConfig":"97"},{"size":646,"mtime":1614325479920,"results":"110","hashOfConfig":"97"},{"size":11786,"mtime":1614264287638,"results":"111","hashOfConfig":"97"},{"size":6030,"mtime":1614264287865,"results":"112","hashOfConfig":"97"},{"size":10125,"mtime":1614264287870,"results":"113","hashOfConfig":"97"},{"size":2989,"mtime":1614264287786,"results":"114","hashOfConfig":"97"},{"size":13452,"mtime":1614264287889,"results":"115","hashOfConfig":"97"},{"size":9884,"mtime":1614264287878,"results":"116","hashOfConfig":"97"},{"size":3424,"mtime":1614264312432,"results":"117","hashOfConfig":"97"},{"size":2597,"mtime":1614264312495,"results":"118","hashOfConfig":"97"},{"size":1022,"mtime":1614264312535,"results":"119","hashOfConfig":"97"},{"size":476,"mtime":1614264287233,"results":"120","hashOfConfig":"97"},{"size":4498,"mtime":1614264287489,"results":"121","hashOfConfig":"97"},{"size":1182,"mtime":1614264287503,"results":"122","hashOfConfig":"97"},{"size":2712,"mtime":1614264287632,"results":"123","hashOfConfig":"97"},{"size":3854,"mtime":1614264287621,"results":"124","hashOfConfig":"97"},{"size":3323,"mtime":1614264287518,"results":"125","hashOfConfig":"97"},{"size":1227,"mtime":1614264287515,"results":"126","hashOfConfig":"97"},{"size":1456,"mtime":1614264287628,"results":"127","hashOfConfig":"97"},{"size":1169,"mtime":1614264287500,"results":"128","hashOfConfig":"97"},{"size":1682,"mtime":1614264287270,"results":"129","hashOfConfig":"97"},{"size":2760,"mtime":1614264287274,"results":"130","hashOfConfig":"97"},{"size":1039,"mtime":1614264287266,"results":"131","hashOfConfig":"97"},{"size":4134,"mtime":1614264287302,"results":"132","hashOfConfig":"97"},{"size":2411,"mtime":1614264287296,"results":"133","hashOfConfig":"97"},{"size":3722,"mtime":1614264287422,"results":"134","hashOfConfig":"97"},{"size":1238,"mtime":1614264287333,"results":"135","hashOfConfig":"97"},{"size":4007,"mtime":1614264287340,"results":"136","hashOfConfig":"97"},{"size":2461,"mtime":1614264287337,"results":"137","hashOfConfig":"97"},{"size":6898,"mtime":1614264287418,"results":"138","hashOfConfig":"97"},{"size":9341,"mtime":1614264287407,"results":"139","hashOfConfig":"97"},{"size":401,"mtime":1614264312428,"results":"140","hashOfConfig":"97"},{"size":1133,"mtime":1614264287171,"results":"141","hashOfConfig":"97"},{"size":2913,"mtime":1614264287183,"results":"142","hashOfConfig":"97"},{"size":7084,"mtime":1614266894484,"results":"143","hashOfConfig":"97"},{"size":1627,"mtime":1614264312561,"results":"144","hashOfConfig":"97"},{"size":75,"mtime":1614264311848,"results":"145","hashOfConfig":"97"},{"size":526,"mtime":1614264404781,"results":"146","hashOfConfig":"97"},{"size":906,"mtime":1614264312444,"results":"147","hashOfConfig":"97"},{"size":1219,"mtime":1614264312491,"results":"148","hashOfConfig":"97"},{"size":2419,"mtime":1614264312465,"results":"149","hashOfConfig":"97"},{"size":522,"mtime":1614264311861,"results":"150","hashOfConfig":"97"},{"size":633,"mtime":1614266805945,"results":"151","hashOfConfig":"97"},{"size":376,"mtime":1614264742269,"results":"152","hashOfConfig":"97"},{"size":234,"mtime":1614264742829,"results":"153","hashOfConfig":"97"},{"size":546,"mtime":1614264742802,"results":"154","hashOfConfig":"97"},{"size":242,"mtime":1614264685596,"results":"155","hashOfConfig":"97"},{"size":13286,"mtime":1614267012470,"results":"156","hashOfConfig":"97"},{"size":901,"mtime":1614264685532,"results":"157","hashOfConfig":"97"},{"size":2059,"mtime":1614264685498,"results":"158","hashOfConfig":"97"},{"size":897,"mtime":1614264685588,"results":"159","hashOfConfig":"97"},{"size":1521,"mtime":1614264311866,"results":"160","hashOfConfig":"97"},{"size":857,"mtime":1614265224462,"results":"161","hashOfConfig":"97"},{"size":841,"mtime":1614265224598,"results":"162","hashOfConfig":"97"},{"size":891,"mtime":1614265224440,"results":"163","hashOfConfig":"97"},{"size":607,"mtime":1614265224419,"results":"164","hashOfConfig":"97"},{"size":1191,"mtime":1614265224549,"results":"165","hashOfConfig":"97"},{"size":984,"mtime":1614265224569,"results":"166","hashOfConfig":"97"},{"size":584,"mtime":1614265252373,"results":"167","hashOfConfig":"97"},{"size":1713,"mtime":1614265252283,"results":"168","hashOfConfig":"97"},{"size":8190,"mtime":1614266974925,"results":"169","hashOfConfig":"97"},{"size":2880,"mtime":1614266215661,"results":"170","hashOfConfig":"97"},{"size":3278,"mtime":1614266215691,"results":"171","hashOfConfig":"97"},{"size":1034,"mtime":1614264742155,"results":"172","hashOfConfig":"97"},{"size":413,"mtime":1614266269992,"results":"173","hashOfConfig":"97"},{"size":420,"mtime":1614264742432,"results":"174","hashOfConfig":"97"},{"size":677,"mtime":1614266270095,"results":"175","hashOfConfig":"97"},{"size":396,"mtime":1614265252460,"results":"176","hashOfConfig":"97"},{"size":1278,"mtime":1614266359272,"results":"177","hashOfConfig":"97"},{"size":694,"mtime":1614267155371,"results":"178","hashOfConfig":"97"},{"size":7285,"mtime":1614325701319,"results":"179","hashOfConfig":"97"},{"size":8190,"mtime":1614266723032,"results":"180","hashOfConfig":"97"},{"size":1294,"mtime":1614267408631,"results":"181","hashOfConfig":"97"},{"size":1448,"mtime":1614267477219,"results":"182","hashOfConfig":"97"},{"size":3278,"mtime":1614266723007,"results":"183","hashOfConfig":"97"},{"size":2880,"mtime":1614266722975,"results":"184","hashOfConfig":"97"},{"size":8190,"mtime":1614266723032,"results":"185","hashOfConfig":"97"},{"size":2880,"mtime":1614266722975,"results":"186","hashOfConfig":"97"},{"size":3278,"mtime":1614266723007,"results":"187","hashOfConfig":"97"},{"size":3129,"mtime":1614326154089,"results":"188","hashOfConfig":"97"},{"size":3687,"mtime":1614327567946,"results":"189","hashOfConfig":"97"},{"size":4617,"mtime":1614340506464,"results":"190","hashOfConfig":"97"},{"size":5049,"mtime":1614341686706,"results":"191","hashOfConfig":"97"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},"twdn1j",{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"194"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"194"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"194"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"194"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"194"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"194"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"194"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"194"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"194"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"194"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"194"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"194"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"194"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"194"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"194"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\index.js",[],["392","393"],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\reportWebVitals.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\registerServiceWorker.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\NextApp.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\styles\\vendors\\style.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\App\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\store\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\history\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\App\\MainApp.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\auth.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\SignIn\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\constants.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\Auth.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\people.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\products.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\ledgers.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\stocks.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\sales.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Header\\index.js",["394"],"import React, { useEffect } from \"react\";\r\nimport { Layout, Popover } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport UserInfo from \"components/UserInfo\";\r\n\r\nimport AppNotification from \"components/AppNotification\";\r\nimport MailNotification from \"components/MailNotification\";\r\nimport Auxiliary from \"utils/Auxiliary\";\r\nimport { MenuFoldOutlined } from \"@ant-design/icons\"\r\nimport { toggleCollapsedSideNav } from \"appRedux/Actions/Setting\";\r\nimport { NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, TAB_SIZE } from \"appRedux/Actions/ThemeSetting\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport wlogo from \"images/finallogo-w.png\"\r\nimport CompanyDetails from \"./CompanyDetails\"\r\nimport { CheckSMSBal } from \"appRedux/Actions/auth\"\r\nconst { Header } = Layout;\r\n\r\nconst PageHeader = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { width, navStyle } = useSelector(({ settings }) => settings);\r\n  const { navCollapsed } = useSelector(({ common }) => common);\r\n  const { smsbal } = useSelector(({ auth }) => auth);\r\n  useEffect(() => {\r\n    dispatch(CheckSMSBal())\r\n  }, [])\r\n\r\n  return (\r\n    <Header className=\"cs-header\">\r\n      {navStyle === NAV_STYLE_DRAWER || ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR) && width < TAB_SIZE) ?\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          <div className=\"gx-linebar gx-mr-3 gx-ml-5\">\r\n            <MenuFoldOutlined\r\n              style={{ fontSize: 30 }}\r\n              onClick={() => {\r\n                dispatch(toggleCollapsedSideNav(!navCollapsed));\r\n              }}\r\n            />\r\n          </div>\r\n          <Link to=\"/\" className=\"gx-d-block gx-d-lg-none gx-pointer\">\r\n            <img alt=\"\" src={wlogo} /></Link>\r\n        </div>\r\n        : null}\r\n      <div>\r\n        <CompanyDetails />\r\n      </div>\r\n      <div style={{ marginLeft: 100 }}>\r\n        <h3 className=\"gx-text-geekblue\"> SMS Bal: {smsbal}</h3>\r\n\r\n      </div>\r\n      <ul className=\"gx-header-notifications gx-ml-auto\">\r\n        <Auxiliary>\r\n          <li className=\"gx-notify\">\r\n            <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\" content={<AppNotification />}\r\n              trigger=\"click\">\r\n              <span className=\"gx-pointer gx-status-pos gx-d-block\">\r\n                <i className=\"icon icon-notification\" />\r\n                <span className=\"gx-status gx-status-rtl gx-small gx-red\" />\r\n              </span>\r\n            </Popover>\r\n          </li>\r\n\r\n          <li className=\"gx-msg\">\r\n            <Popover overlayClassName=\"gx-popover-horizantal\" placement=\"bottomRight\"\r\n              content={<MailNotification />} trigger=\"click\">\r\n              <span className=\"gx-pointer gx-status-pos gx-d-block\">\r\n                <i className=\"icon icon-chat-new\" />\r\n                <span className=\"gx-status gx-status-rtl gx-small gx-orange\" />\r\n              </span>\r\n            </Popover>\r\n          </li>\r\n        </Auxiliary>\r\n        {/*  {width >= TAB_SIZE ? null : } */}\r\n\r\n        {width >= TAB_SIZE ?\r\n          <Auxiliary>\r\n            <li className=\"gx-user-nav\"><UserInfo /></li>\r\n          </Auxiliary>\r\n          :\r\n          <Auxiliary>\r\n            <li className=\"gx-user-nav\"><UserInfo width={true} /></li>\r\n          </Auxiliary>\r\n        }\r\n      </ul>\r\n\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\SignIn\\login.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\common.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\Auth.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\common.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\stocks.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\products.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\people.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\ledgers.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\sales.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\Settings.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\people.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\products.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\ledgers.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\stocks.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\sales.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\users.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\ledgers.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\products.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\people.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\stocks.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\sales.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Header\\CompanyDetails.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\Setting.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\ThemeSetting.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\SidebarContent.js",["395"],"import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    DashboardOutlined, UserOutlined, DiffOutlined, DeploymentUnitOutlined,\r\n    AuditOutlined, ApartmentOutlined, AppstoreAddOutlined, ContainerOutlined, BankOutlined, ShopOutlined,\r\n    ReconciliationOutlined, TrademarkOutlined, UsergroupAddOutlined,\r\n    SettingOutlined, LineChartOutlined, SwapOutlined, UngroupOutlined, SplitCellsOutlined, ScheduleOutlined,\r\n    ClockCircleOutlined, WeiboSquareOutlined, GoldOutlined, BookOutlined,\r\n    DotChartOutlined, PoundOutlined, AccountBookOutlined, BarChartOutlined, RiseOutlined, FundOutlined, FallOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport CustomScrollbars from \"utils/CustomScrollbars\";\r\nimport SidebarLogo from \"./SidebarLogo\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nimport AppsNavigation from \"./AppsNavigation\";\r\n//import AppNotification from \"components/AppNotification\";\r\n//import MailNotification from \"components/MailNotification\";\r\n\r\nimport {\r\n    NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\r\n    NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\r\n    THEME_TYPE_LITE\r\n} from \"appRedux/Actions/ThemeSetting\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst SidebarContent = () => {\r\n\r\n    let { pathname } = useSelector(({ common }) => common);\r\n    let { navStyle, themeType } = useSelector(({ settings }) => settings);\r\n\r\n\r\n\r\n    const getNoHeaderClass = (navStyle) => {\r\n        if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\r\n            return \"gx-no-header-notifications\";\r\n        }\r\n        return \"\";\r\n    };\r\n\r\n    const selectedKeys = pathname.substr(1);\r\n    const defaultOpenKeys = selectedKeys.split('/')[1];\r\n    /* const getNavStyleSubMenuClass = (navStyle) => {\r\n        if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\r\n            return \"gx-no-header-submenu-popup\";\r\n        }\r\n        return \"\";\r\n    }; */\r\n    return (\r\n        <>\r\n            <SidebarLogo />\r\n            <div className=\"gx-sidebar-content\">\r\n                <div className={`gx-sidebar-notifications ${getNoHeaderClass(navStyle)}`}>\r\n                    <UserProfile />\r\n                    <AppsNavigation />\r\n                </div>\r\n                <CustomScrollbars className=\"gx-layout-sider-scrollbar\">\r\n                    <Menu\r\n                        defaultOpenKeys={[defaultOpenKeys]}\r\n                        selectedKeys={[selectedKeys]}\r\n                        theme={themeType === THEME_TYPE_LITE ? 'lite' : 'dark'}\r\n                        mode=\"inline\">\r\n\r\n                        <MenuItemGroup key=\"main\" className=\"gx-menu-group\" title={\"Main\"}>\r\n                            <Menu.Item key=\"1\">\r\n                                <Link to=\"/dashboard\">\r\n                                    <DashboardOutlined className=\"sidenav-icon\" />\r\n                                    <span>Dashboard</span></Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"1000\">\r\n                                <Link to=\"/dayend\">\r\n                                    <i className=\"icon icon-queries\" />\r\n                                    <span>End Day</span></Link>\r\n                            </Menu.Item>\r\n\r\n                            <MenuItemGroup key=\"sales\" className=\"gx-menu-group\" title={\"Transactions\"}>\r\n                                <Menu.Item key=\"2\">\r\n                                    <Link to=\"/sales/pos\">\r\n                                        <ShopOutlined />\r\n                                        <span>POS</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"1022\">\r\n                                    <Link to=\"/sales/saleslists\">\r\n                                        <ShopOutlined />\r\n                                        <span>Reprint Sales</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <SubMenu key=\"profoma\"\r\n                                    title={<span style={{ alignItems: 'center' }}>\r\n                                        <ScheduleOutlined />\r\n                                        <span>Profoma </span></span>}>\r\n                                    <Menu.Item key=\"21\">\r\n                                        <Link to=\"/profoma/add\">\r\n                                            <DiffOutlined />\r\n                                            <span>Add Profoma</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"213\">\r\n                                        <Link to=\"/profoma/lists\">\r\n                                            <i className=\"icon icon-lising-dbrd\" />\r\n                                            <span>Profoma Lists</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"2131\">\r\n                                        <Link to=\"/profoma/update\">\r\n                                            <i className=\"icon icon-chart-composed\" />\r\n                                            <span>Update Profoma</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                </SubMenu>\r\n                                <SubMenu key=\"Transfers\"\r\n                                    title={<span style={{ alignItems: 'center' }}>\r\n                                        <i className=\"icon icon-transfer\" />\r\n                                        <span>Transfers </span></span>}>\r\n                                    <Menu.Item key=\"31\">\r\n                                        <Link to=\"/transfer/income\">\r\n                                            <AccountBookOutlined />\r\n                                            <span>Income</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"315\">\r\n                                        <Link to=\"/transfer/expense\">\r\n                                            <PoundOutlined />\r\n                                            <span>Expenses</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"314\">\r\n                                        <Link to=\"/transfer/cash\">\r\n                                            <i className=\"icon icon-revenue-new\" />\r\n                                            <span>Cash Transfers</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"333\">\r\n                                        <Link to=\"/transfer/pay\">\r\n                                            <i className=\"icon icon-refer\" />\r\n                                            <span>Pay Debt</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                </SubMenu>\r\n\r\n                            </MenuItemGroup>\r\n\r\n\r\n\r\n                            <MenuItemGroup key=\"management\" className=\"gx-menu-group\" title={\"Management\"}>\r\n                                <Menu.Item key=\"400\">\r\n                                    <Link to=\"/ledgers\">\r\n                                        <i className=\"icon icon-widgets\" />\r\n                                        <span>Ledgers</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n\r\n                                <SubMenu key=\"products\"\r\n                                    title={<span style={{ alignItems: 'center' }}>  <AppstoreAddOutlined />\r\n                                        <span>Products</span></span>}>\r\n                                    <Menu.Item key=\"4\">\r\n                                        <Link to=\"/products/category\">\r\n                                            <ContainerOutlined />\r\n                                            <span>Category</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"5\">\r\n                                        <Link to=\"/products/unit\">\r\n                                            <DeploymentUnitOutlined />\r\n                                            <span>Unit</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"6\">\r\n                                        <Link to=\"/products/all\">\r\n                                            <i className=\"icon icon-pricing-table\" />\r\n                                            <span>Products</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"666\">\r\n                                        <Link to=\"/products/bulk\">\r\n                                            <i className=\"icon icon-product-list\" />\r\n                                            <span>Multiple Products</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                </SubMenu>\r\n                                <SubMenu key=\"stocks\"\r\n                                    title={<span style={{ alignItems: 'center' }}> <AuditOutlined />\r\n                                        <span>Stock </span></span>}>\r\n                                    <Menu.Item key=\"7\">\r\n                                        <Link to=\"/stock/entries\">\r\n                                            <ApartmentOutlined />\r\n                                            <span>Stock Entries</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"71\">\r\n                                        <Link to=\"/stock/all\">\r\n                                            <GoldOutlined />\r\n                                            <span>Stock Lists</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n\r\n                                    <Menu.Item key=\"9\">\r\n                                        <Link to=\"/stock/available\">\r\n                                            <ReconciliationOutlined />\r\n                                            <span>Available Stock</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"10\">\r\n                                        <Link to=\"/stock/reorder\">\r\n                                            <TrademarkOutlined />\r\n                                            <span>Needs Reorder</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"82\">\r\n                                        <Link to=\"/stock/transfer\">\r\n                                            <SplitCellsOutlined />\r\n                                            <span>Transfer to Branch</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"85\">\r\n                                        <Link to=\"/stock/pendingtransfers\">\r\n                                            <WeiboSquareOutlined />\r\n                                            <span>Authorize Transfers</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"83\">\r\n                                        <Link to=\"/stock/movement\">\r\n                                            <SwapOutlined />\r\n                                            <span>Stock Movement</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"84\">\r\n                                        <Link to=\"/stock/pendingmovement\">\r\n                                            <ClockCircleOutlined />\r\n                                            <span>Authorize Movement</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n\r\n                                    <Menu.Item key=\"8\">\r\n                                        <Link to=\"/stock/warehouse\">\r\n                                            <BankOutlined />\r\n                                            <span>Warehouse</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"81\">\r\n                                        <Link to=\"/stock/warehouselist\">\r\n                                            <UngroupOutlined />\r\n                                            <span>Warehouse Stock</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                </SubMenu>\r\n                                <SubMenu key=\"people\"\r\n                                    title={<span style={{ alignItems: 'center' }}>  <UsergroupAddOutlined />\r\n                                        <span>People </span></span>}>\r\n                                    <Menu.Item key=\"11\">\r\n                                        <Link to=\"/people/suppliers\">\r\n                                            <UserOutlined />\r\n                                            <span>Suppliers</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"12\">\r\n                                        <Link to=\"/people/customers\">\r\n                                            <i className=\"icon icon-map-street-view\" />\r\n                                            <span>Customers</span>\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                </SubMenu>\r\n                            </MenuItemGroup>\r\n                        </MenuItemGroup>\r\n                        <MenuItemGroup key=\"reports\" className=\"gx-menu-group\" title={\"Reports\"}>\r\n                            <SubMenu key=\"reports\"\r\n                                title={<span style={{ alignItems: 'center' }}>  <LineChartOutlined />\r\n                                    <span>Sales Reports </span></span>}>\r\n                                <Menu.Item key=\"13\">\r\n                                    <Link to=\"/reports/dailysales\">\r\n                                        <DotChartOutlined />\r\n                                        <span>Daily Sales</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"141\">\r\n                                    <Link to=\"/reports/weeklysales\">\r\n                                        <i className=\"icon icon-chart-bar\" />\r\n                                        <span>Weekly Sales</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"1413\">\r\n                                    <Link to=\"/reports/monthlysales\">\r\n                                        <i className=\"icon icon-chart-area\" />\r\n                                        <span>Monthly Sales</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"1414\">\r\n                                    <Link to=\"/reports/yearlysales\">\r\n                                        <i className=\"icon icon-chart-tree\" />\r\n                                        <span>Yearly Sales</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"131\">\r\n                                    <Link to=\"/reports/perodicsales\">\r\n                                        <BarChartOutlined />\r\n                                        <span>Perodic Sales</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n\r\n                            </SubMenu>\r\n                            <SubMenu key=\"records\"\r\n                                title={<span style={{ alignItems: 'center' }}>\r\n                                    <i className=\"icon icon-data-display\" />\r\n                                    <span>Top Records </span></span>}>\r\n                                <Menu.Item key=\"713\">\r\n                                    <Link to=\"/records/topselling\">\r\n                                        <FundOutlined />\r\n                                        <span>Top Selling Products</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"7131\">\r\n                                    <Link to=\"/records/topcustomers\">\r\n                                        <RiseOutlined />\r\n                                        <span>Top Customers</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"714\">\r\n                                    <Link to=\"/records/allbillsdue\">\r\n                                        <FallOutlined />\r\n                                        <span>All Bills Due</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu key=\"pl\"\r\n                                title={<span style={{ alignItems: 'center' }}>\r\n                                    <i className=\"icon icon-anchor\" />\r\n                                    <span>Income &amp; Expenses </span></span>}>\r\n                                <Menu.Item key=\"7713\">\r\n                                    <Link to=\"/reports/income\">\r\n                                        <i className=\"icon icon-ckeditor\" />\r\n                                        <span>Income</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"77131\">\r\n                                    <Link to=\"/reports/expenses\">\r\n                                        <i className=\"icon icon-editor\" />\r\n                                        <span>Expenses</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"7714\">\r\n                                    <Link to=\"/reports/assets\">\r\n                                        <i className=\"icon icon-map-traffic-layer\" />\r\n                                        <span>Assets</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"7714\">\r\n                                    <Link to=\"/reports/liabilities\">\r\n                                        <i className=\"icon icon-stats\" />\r\n                                        <span>Liabilities</span>\r\n                                    </Link>\r\n                                </Menu.Item>\r\n                            </SubMenu>\r\n                        </MenuItemGroup>\r\n                        <MenuItemGroup key=\"users\" className=\"gx-menu-group\" title={\"Setups\"}>\r\n                            <Menu.Item key=\"154\">\r\n                                <Link to=\"/setups/branch\">\r\n                                    <i className=\"icon icon-company\" />\r\n                                    <span>Branch</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"155\">\r\n                                <Link to=\"/setups/users\">\r\n                                    <i className=\"icon icon-family\" />\r\n                                    <span>Users</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"15\">\r\n                                <Link to=\"/setups/profile\">\r\n                                    <i className=\"icon icon-profile\" />\r\n                                    <span>User Profile</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"16\">\r\n                                <Link to=\"/setups/chgpwd\">\r\n                                    <SettingOutlined />\r\n                                    <span>Change Password</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"164\">\r\n                                <Link to=\"/setups/resetpwd\">\r\n                                    <i className=\"icon icon-reset-password\" />\r\n                                    <span>Reset Password</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                        </MenuItemGroup>\r\n                    </Menu>\r\n                </CustomScrollbars>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nSidebarContent.propTypes = {};\r\n\r\nexport default SidebarContent;\r\n\r\n","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\SignIn\\loginform.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\utils\\Auxiliary.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\root.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\AppsNavigation.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\UserProfile.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\containers\\Sidebar\\SidebarLogo.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\utils\\CustomScrollbars.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Loading\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Alert\\notification.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Alert\\message.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\header.js",["396","397","398","399","400"],"import React, { useEffect, useState, } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Row, Col } from \"antd\"\r\n//import DashboardCard from \"./card\"\r\nimport DashColor from \"utils/DashColor\";\r\nimport DashboardTops from './dashboardtops';\r\nimport BalanceHistory from \"./BalanceHistory\"\r\nimport EcommerceStatus from \"./EcommerceStatus\"\r\n\r\nimport LoadingProgress from \"../Indicators/IndicatorType/node_modules/components/Loading\"\r\n//import { Line, LineChart, ResponsiveContainer, Tooltip } from \"recharts\";\r\nimport { requestGetAvailableStock, } from \"appRedux/Actions/stocks\"\r\nimport { requestGetSales, requestGetBillDue, requestGetTopCustomer, requestGetMonthSales } from \"appRedux/Actions/sales\"\r\n\r\nimport { showAuthLoader, } from \"../Indicators/IndicatorType/node_modules/appRedux/Actions/common\"\r\nimport moment from \"moment\"\r\n//import ChartCard from './ChartCard';\r\nimport { orderBy } from \"lodash\"\r\nexport const lineData = [\r\n    { name: 'Page A', price: 200 },\r\n    { name: 'Page B', price: 1100 },\r\n    { name: 'Page C', price: 800 },\r\n    { name: 'Page D', price: 1700 },\r\n    { name: 'Page D', price: 600 },\r\n    { name: 'Page D', price: 1800 },\r\n    { name: 'Page D', price: 600 },\r\n];\r\n\r\nconst DashboardTop = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { availableLists } = useSelector(({ stocks }) => stocks);\r\n    const { salesLists, billsDueLists, topCustomerLists, monthSalesLists } = useSelector(({ sales }) => sales);\r\n    const { user, } = useSelector(({ auth }) => auth)\r\n    const { loader } = useSelector(({ common }) => common);\r\n    const [dataSource, setDataSource] = useState([])\r\n    useEffect(() => { dispatch(requestGetAvailableStock({ company_id: user.company_id, branch_id: user.branch_id })) }, [ ])\r\n    useEffect(() => {\r\n        const LoadData = async () => {\r\n            setDataSource(await availableLists.filter(item => item.quantity <= item.product_m.low_stock_level))\r\n        }\r\n        LoadData()\r\n    }, [availableLists]) \r\n    useEffect(() => {\r\n\r\n        dispatch(requestGetSales({\r\n            sale_date: moment().format(\"YYYY-MM-DD\"),\r\n            created_user: 0,\r\n            branch_id: user.branch_id,\r\n            company_id: user.company_id,\r\n            trans_type: \"DAILY\"\r\n        }))\r\n    }, [ ])\r\n    useEffect(() => {\r\n        dispatch(requestGetMonthSales({\r\n            sale_date: moment().format(\"YYYY-MM-DD\"),\r\n            created_user: 0,\r\n            branch_id: user.branch_id,\r\n            company_id: user.company_id,\r\n            trans_type: \"MONTHLY\"\r\n        }))\r\n        dispatch(showAuthLoader())\r\n    }, [ ])\r\n    useEffect(() => {\r\n        dispatch(requestGetBillDue({\r\n            branch_id: user.branch_id,\r\n            company_id: user.company_id,\r\n        }))\r\n    }, [ ])\r\n    useEffect(() => {\r\n        dispatch(requestGetTopCustomer({\r\n            branch_id: user.branch_id,\r\n            company_id: user.company_id,\r\n        }))\r\n    }, [ ])\r\n\r\n    return (\r\n        <div>\r\n            <LoadingProgress loading={loader} />\r\n            <Row justify=\"start\">\r\n                <Col xl={4} lg={8} md={8} sm={12} xs={24}>\r\n                    <EcommerceStatus color=\"geekblue\" icon=\"revenue-new\" title={salesLists ?\r\n                        formatCurrency(salesLists.reduce((a, c) => (a + (parseFloat(c.total_amt))), 0))\r\n                        : 0} colorTitle=\"primary\"\r\n                        subTitle=\"Total Revenue Today\" colorSubTitle=\"grey\" />\r\n                </Col>\r\n                <Col xl={4} lg={8} md={8} sm={12} xs={24}>\r\n                    <EcommerceStatus color=\"orange\" icon=\"orders\" title={\r\n                        salesLists ? formatCurrency(salesLists.reduce((a, c) => (a + (parseFloat(c.discount_amt))), 0)) : 0\r\n                    } colorTitle=\"geekblue\"\r\n                        subTitle=\"Total Discount Today\" colorSubTitle=\"geekblue\" />\r\n                </Col>\r\n\r\n                <Col xl={4} lg={8} md={8} sm={12} xs={24}>\r\n                    <EcommerceStatus color={DashColor[2].cardColor} icon=\"visits\" title={\r\n                        salesLists ? formatCurrency(billsDueLists.reduce((a, c) => (a + (parseFloat(actualDebt(c.debt_amt, c.amt_paid)))), 0)) : 0\r\n                    } colorTitle=\"white\" subTitle=\"Total Outstanding Debt\"\r\n                        colorSubTitle=\"geekblue\" />\r\n                </Col>\r\n                <Col xl={12} lg={16} md={24} sm={16} xs={24}>\r\n                    <BalanceHistory\r\n                    />\r\n                </Col>\r\n\r\n                <Col xl={12} lg={12} md={12} sm={24} xs={24}>\r\n                    <DashboardTops\r\n                        viewAll=\"stock/reorder\"\r\n                        cartTitle=\"Products Need Reorder\"\r\n                        size=\"small\"\r\n                        dataSource={dataSource && dataSource.slice(0, 10).map((item, index) => {\r\n                            return {\r\n                                ...item,\r\n                                rowNumber: index + 1,\r\n                                category: item.product_m.category_m.product_category,\r\n                                product: item.product_m.product_description,\r\n                                unit: item.unit_m.name,\r\n                                reorder_level: item.product_m.low_stock_level,\r\n                            }\r\n                        })}\r\n                        rowKey=\"product_id\"\r\n                        scroll={{\r\n                            y: 170,\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                title: '#',\r\n                                dataIndex: 'rowNumber',\r\n                                key: 'rowNumber',\r\n                                width: 30,\r\n                            }, {\r\n                                title: 'Product',\r\n                                dataIndex: 'product',\r\n                                key: 'product',\r\n                            }, {\r\n                                title: 'Unit',\r\n                                dataIndex: 'unit',\r\n                                key: 'unit',\r\n                                width: 80,\r\n                            }, {\r\n                                title: 'Qty',\r\n                                dataIndex: 'quantity',\r\n                                key: 'quantity',\r\n                                width: 60,\r\n                            }, {\r\n                                title: 'Reorder',\r\n                                dataIndex: 'reorder_level',\r\n                                key: 'reorder_level',\r\n                                width: 65,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col xl={12} lg={12} md={12} sm={24} xs={24}>\r\n                    <DashboardTops\r\n                        viewAll=\"records/topselling\"\r\n                        cartTitle=\"Top Selling Products\"\r\n                        size=\"small\"\r\n                        dataSource={orderBy(monthSalesLists.slice(0, 10), ['grand_total'], ['desc']).map((item, index) => {\r\n                            return {\r\n                                ...item,\r\n                                rowNumber: index + 1,\r\n                                quantity: item.grand_qty,\r\n                                product: item['product_m.product_description'],\r\n                                unit: item['unit_m.name'],\r\n                                sell_price: `₵ ${item.selling_price}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\r\n                                total_amt: `₵ ${item.grand_total}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\r\n                                total_amount: item.grand_total,\r\n                            }\r\n                        })}\r\n                        rowKey=\"product_id\"\r\n                        scroll={{\r\n                            y: 170,\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                title: '#',\r\n                                dataIndex: 'rowNumber',\r\n                                key: 'rowNumber',\r\n                                width: 30,\r\n                            }, {\r\n                                title: 'Product',\r\n                                dataIndex: 'product',\r\n                                key: 'product',\r\n                            }, {\r\n                                title: 'Unit',\r\n                                dataIndex: 'unit',\r\n                                key: 'unit',\r\n                                width: 100,\r\n                            }, {\r\n                                title: 'Qty',\r\n                                dataIndex: 'quantity',\r\n                                key: 'quantity',\r\n                                width: 70,\r\n                            }, {\r\n                                title: 'Sales',\r\n                                dataIndex: 'total_amt',\r\n                                key: 'total_amt',\r\n                                width: 70,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xl={12} lg={12} md={12} sm={16} xs={24}>\r\n                    <DashboardTops\r\n                        viewAll=\"records/topcustomers\"\r\n                        cartTitle=\"Top Customer List\"\r\n                        size=\"small\"\r\n                        dataSource={orderBy(topCustomerLists.slice(0, 10), ['total_amt'], ['desc']).map((item, index) => {\r\n                            return {\r\n                                ...item,\r\n                                rowNumber: index + 1,\r\n                                customer: item.customer_m.customer,\r\n                                total_sales: `₵ ${item.total_amt}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\r\n                                total_qty: `₵ ${item.grand_qty}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\r\n                                total_discount: `₵ ${item.discount_amt}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\r\n                            }\r\n                        })}\r\n                        rowKey=\"customer_id\"\r\n                        scroll={{\r\n                            y: 170,\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                title: '#',\r\n                                dataIndex: 'rowNumber',\r\n                                key: 'rowNumber',\r\n                                width: 30,\r\n                            }, {\r\n                                title: 'Customer',\r\n                                dataIndex: 'customer',\r\n                                key: 'customer',\r\n                            }, {\r\n                                title: 'Total Sales',\r\n                                dataIndex: 'total_sales',\r\n                                key: 'total_sales',\r\n                            }, {\r\n                                title: 'Items Sold Qty',\r\n                                dataIndex: 'grand_qty',\r\n                                key: 'grand_qty',\r\n                            }, {\r\n                                title: 'Discount Received',\r\n                                dataIndex: 'total_discount',\r\n                                key: 'total_discount',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col xl={8} lg={8} md={12} sm={16} xs={24}>\r\n                    <DashboardTops\r\n                        viewAll=\"records/allbillsdue\"\r\n                        cartTitle=\"All Bills Due\"\r\n                        size=\"small\"\r\n                        dataSource={orderBy(billsDueLists.slice(0, 10), ['oustanding_debt'], ['desc']).map((item, index) => {\r\n                            return {\r\n                                ...item,\r\n                                rowNumber: index + 1,\r\n                                customer: item.customer_m.customer,\r\n                                debt: `₵ ${item.oustanding_debt}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\r\n                            }\r\n                        })}\r\n                        rowKey=\"customer_id\"\r\n                        scroll={{\r\n                            y: 170,\r\n                        }}\r\n                        columns={[\r\n                            {\r\n                                title: '#',\r\n                                dataIndex: 'rowNumber',\r\n                                key: 'rowNumber',\r\n                                width: 30,\r\n                            }, {\r\n                                title: 'Customer',\r\n                                dataIndex: 'customer',\r\n                                key: 'customer',\r\n                            }, {\r\n                                title: 'Outstanding Debt',\r\n                                dataIndex: 'debt',\r\n                                key: 'debt',\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n\r\n\r\n\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst formatCurrency = (amount) => `₵ ${amount}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\nconst actualDebt = (debt, paid) => debt - paid\r\nexport default DashboardTop;","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\EcommerceStatus.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\BalanceHistory.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Dashboard\\dashboardtops.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\utils\\DashColor.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\AppNotification\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\MailNotification\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\AppNotification\\data.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\AppNotification\\NotificationItem.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\MailNotification\\NotificationItem.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\MailNotification\\data.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Widget\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\UserInfo\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Customer\\index.js",["401"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Button, Menu, Dropdown, Popconfirm } from \"antd\"\r\nimport { EditOutlined, MoreOutlined, DeleteOutlined } from \"@ant-design/icons\"\r\n\r\nimport PageContent from \"components/PageContent\"\r\nimport LoadingProgress from \"components/Loading\"\r\nimport FormModal from \"components/Modals\"\r\n\r\nimport Create from \"./Create\"\r\nimport Edit from \"./Edit\"\r\n\r\nimport { showAuthLoader, hideAuthLoader, showModal, hideModal } from \"appRedux/Actions/common\"\r\nimport { requestSaveCustomer, requestUpdateCustomer, requestDeleteCustomer, requestGetCustomer } from \"appRedux/Actions/people\"\r\n\r\nimport FuzzySearch from 'fuzzy-search';\r\nlet searcher;\r\nconst Customers = () => {\r\n    const dispatch = useDispatch()\r\n    const [modalType, setModalType] = useState(false)\r\n    const [detail, setDetail] = useState({})\r\n    const { customerLists, customerTypeLists } = useSelector(({ people }) => people);\r\n    const { modal, loader } = useSelector(({ common }) => common);\r\n    const { authUser, user } = useSelector(({ auth }) => auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(requestGetCustomer({\r\n            del_flg: 0, company_id: user.company_id,\r\n            branch_id: user.branch_id,\r\n        }))\r\n    }, [])\r\n\r\n    const LoadNShowModal = () => {\r\n        dispatch(showAuthLoader())\r\n        dispatch(showModal())\r\n    }\r\n\r\n    const CloseModal = () => dispatch(hideModal())\r\n    const hideModalLoader = () => dispatch(hideAuthLoader())\r\n    const EditDataHandler = record => {\r\n        setModalType(true)\r\n        setDetail(record)\r\n        LoadNShowModal()\r\n    }\r\n\r\n    const DeleteHandler = record => {\r\n        dispatch(showAuthLoader())\r\n        dispatch(requestDeleteCustomer(record.id))\r\n    }\r\n    const AddNewHandler = () => {\r\n        setModalType(false)\r\n        LoadNShowModal()\r\n    }\r\n    const SaveHandler = (record) => {\r\n        const data = {\r\n            company_id: user.company_id,\r\n            branch_id: user.branch_id,\r\n            created_user: authUser,\r\n            glcode: 325210,\r\n            ...record\r\n        }\r\n        dispatch(showAuthLoader())\r\n        dispatch(requestSaveCustomer(data))\r\n    }\r\n    const UpdateHandler = (record) => {\r\n        const data = {\r\n            id: detail.id,\r\n            ...record\r\n        }\r\n        dispatch(showAuthLoader())\r\n        dispatch(requestUpdateCustomer(data))\r\n    }\r\n\r\n    const ValidationAlert = errorInfo => {\r\n        // console.log(errorInfo)\r\n    }\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n    searcher = new FuzzySearch(customerLists, [\"customer\", \"telephone\", \"address\", \"email\",], { caseSensitive: false });\r\n    useEffect(() => {\r\n        const LoadData = async () => {\r\n            setDataSource(await customerLists)\r\n        }\r\n        LoadData()\r\n    }, [customerLists])\r\n    const OnSearch = (e) => setDataSource(searcher.search(e.target.value))\r\n\r\n    return (\r\n        <div className=\"gx-main-content\">\r\n            <FormModal\r\n                children={\r\n                    <div>\r\n                        <LoadingProgress loading={loader} />\r\n                        {modalType ?\r\n                            <Edit detail={detail} onFinish={UpdateHandler} hideModalLoader={hideModalLoader} onFinishFailed={ValidationAlert}\r\n                                customerTypeLists={customerTypeLists}\r\n                            />\r\n                            :\r\n                            <Create onFinish={SaveHandler} hideModalLoader={hideModalLoader} onFinishFailed={ValidationAlert}\r\n                                customerTypeLists={customerTypeLists}\r\n                            />\r\n                        }\r\n                    </div>\r\n                }\r\n                title={modalType ? \"Edit\" : \"Create\"}\r\n                visible={modal}\r\n                width={600}\r\n                handleCancel={CloseModal}\r\n            />\r\n\r\n\r\n            <PageContent\r\n                OnSearch={OnSearch}\r\n                rowKey=\"id\"\r\n                dataSource={dataSource}\r\n                AddNewHandler={AddNewHandler}\r\n                pageTitle=\"Customers\"\r\n                placeholder=\"Search for Customers\"\r\n                scroll={{ width: 700 }}\r\n                loading={{ spinning: loader, indicator: <LoadingProgress loading={loader} /> }}\r\n                addNewText=\"Customer\"\r\n                columns={[\r\n                    {\r\n                        title: 'ID',\r\n                        dataIndex: 'id',\r\n                        key: 'id',\r\n                        width: 70,\r\n                        fixed: 'left',\r\n                    },/*  {\r\n                        title: 'Customer Type',\r\n                        dataIndex: 'customer_type_id',\r\n                        key: 'customer_type_id',\r\n                    }, */ {\r\n                        title: 'Customer',\r\n                        dataIndex: 'customer',\r\n                        key: 'customer',\r\n                    }, {\r\n                        title: 'Telephone',\r\n                        dataIndex: 'telephone',\r\n                        key: 'telephone',\r\n                    }, {\r\n                        title: 'Address',\r\n                        dataIndex: 'address',\r\n                        key: 'address',\r\n                    }, {\r\n                        title: 'Email',\r\n                        dataIndex: 'email',\r\n                        key: 'email',\r\n                    }, {\r\n                        title: 'Glcode',\r\n                        dataIndex: 'glcode',\r\n                        key: 'glcode',\r\n                    },\r\n                    {\r\n                        title: 'Action',\r\n                        key: 'action',\r\n                        fixed: 'right',\r\n                        width: 70,\r\n                        render: (text, record) => (\r\n                            <span >\r\n                                <Dropdown\r\n                                    //  disabled={sessionStorage.role === \"ADMIN\" ? false : true}\r\n                                    overlay={\r\n                                        (<Menu>\r\n                                            <Menu.Item key=\"1\">\r\n                                                <span className=\"gx-text-blue\" onClick={() => EditDataHandler(record)}>\r\n                                                    <EditOutlined /> Edit\r\n                                            </span>\r\n                                            </Menu.Item>\r\n                                            <Menu.Item key=\"2\">\r\n                                                <Popconfirm\r\n                                                    placement=\"top\"\r\n                                                    title={`Are you sure to delete ${record.customer}?`}\r\n                                                    onConfirm={() => DeleteHandler(record)}\r\n                                                    onCancel={(e) => console.log(e)}\r\n                                                    okText=\"Yes\"\r\n                                                    cancelText=\"No\"\r\n                                                >\r\n                                                    <span className=\"gx-text-red\" >\r\n                                                        <DeleteOutlined /> Delete\r\n                                            </span>\r\n                                                </Popconfirm>\r\n\r\n                                            </Menu.Item>\r\n                                        </Menu>)\r\n                                    } placement=\"bottomRight\" trigger={['click']}>\r\n                                    <Button type=\"primary\" className=\"gx-bg-geekblue\"\r\n                                        shape=\"circle\"\r\n                                        icon={<MoreOutlined style={{ fontWeight: 700 }} />}\r\n                                        size=\"middle\" />\r\n                                </Dropdown>\r\n                            </span>\r\n                        ),\r\n                    },\r\n                ]}\r\n            />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Customers;","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Customer\\Create.js",["402"],"import React, { useEffect } from 'react';\r\nimport { Form, Button, Input, Select } from \"antd\"\r\nimport { SaveOutlined, PhoneFilled } from \"@ant-design/icons\"\r\nimport { useSelector } from \"react-redux\"\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 12,\r\n        span: 12,\r\n    },\r\n};\r\n\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst Create = ({ onFinish, onFinishFailed, hideModalLoader }) => {\r\n\r\n    const { customerTypeLists } = useSelector(({ people }) => people);\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            hideModalLoader()\r\n        }, 1500);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Form name=\"Add\" onFinish={onFinish} onFinishFailed={onFinishFailed} size=\"large\"\r\n                labelCol={{ span: 6, }} wrapperCol={{ span: 16, }}>\r\n                <Form.Item label=\"Customer Type\" name=\"customer_type_id\"\r\n                    rules={[{ required: true, message: 'Please Select Customer Type', },]}\r\n                >\r\n                    <Select  showSearch placeholder=\"Select Customer Type\" optionFilterProp=\"children\"\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                        style={{ width: '100%' }} >\r\n                        {customerTypeLists && customerTypeLists.map((item, index) => (\r\n                            <React.Fragment key={index}>\r\n                                <Option key={item.id} value={item.id}>{item.customer_type}</Option>\r\n                            </React.Fragment>))}\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Customer\" name=\"customer\"\r\n                    rules={[{ required: true, message: 'Please Enter Customer', },]}\r\n                >\r\n                    <Input placeholder=\"Customer\" allowClear />\r\n                </Form.Item>\r\n                <Form.Item label=\"Telephone\" name=\"telephone\"\r\n                    rules={[{ required: true, message: 'Please Enter Telephone', },]}\r\n                >\r\n                    <Input placeholder=\"Telephone\" addonBefore=\"+233\" suffix={<PhoneFilled />} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Email\" name=\"email\" >\r\n                    <Input placeholder=\"Email\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"Address\" name=\"address\"   >\r\n                    <TextArea allowClear placeholder=\"Address\" autoSize={{ minRows: 2, maxRows: 6 }} />\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout} style={{ display: 'flex', justifyContent: 'center', marginTop: 40 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        <SaveOutlined />  Save\r\n                 </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Create;","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Customer\\Edit.js",["403"],"import React, { useEffect } from 'react';\r\nimport { Form, Button, Input, Select } from \"antd\"\r\nimport { SaveOutlined, PhoneFilled } from \"@ant-design/icons\"\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 12,\r\n        span: 12,\r\n    },\r\n};\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst Edit = ({ detail, onFinish, onFinishFailed, hideModalLoader, customerTypeLists }) => {\r\n    const [form] = Form.useForm();\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            customer_type_id: detail.customer_type_id,\r\n            customer: detail.customer,\r\n            telephone: detail.telephone,\r\n            email: detail.email,\r\n            address: detail.address,\r\n        });\r\n        setTimeout(() => {\r\n            hideModalLoader()\r\n        }, 1500);\r\n    }, [detail])\r\n\r\n    return (\r\n        <div>\r\n            <Form name=\"Edit\" form={form} onFinish={onFinish} onFinishFailed={onFinishFailed} size=\"large\"\r\n                labelCol={{ span: 6, }} wrapperCol={{ span: 16, }}>\r\n                <Form.Item label=\"Customer Type\" name=\"customer_type_id\"\r\n                    rules={[{ required: true, message: 'Please Select Customer Type', },]}\r\n                >\r\n                    <Select showSearch placeholder=\"Select Customer Type\" optionFilterProp=\"children\"\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                        style={{ width: '100%' }} >\r\n                        {customerTypeLists && customerTypeLists.map((item, index) => (\r\n                            <React.Fragment key={index}>\r\n                                {detail.customer_type_id === item.id ?\r\n                                    <Option selected value={detail.id} >{item.customer_type}</Option>\r\n                                    : <Option key={item.id} value={item.id}>{item.customer_type}</Option>}\r\n                            </React.Fragment>))}\r\n\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Customer\" name=\"customer\"\r\n                    rules={[{ required: true, message: 'Please Enter Customer', },]}\r\n                >\r\n                    <Input placeholder=\"Customer\" allowClear />\r\n                </Form.Item>\r\n                <Form.Item label=\"Telephone\" name=\"telephone\"\r\n                    rules={[{ required: true, message: 'Please Enter Telephone', },]}\r\n                >\r\n                    <Input placeholder=\"Telephone\" addonBefore=\"+233\" suffix={<PhoneFilled />} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Email\" name=\"email\" >\r\n                    <Input placeholder=\"Email\" />\r\n                </Form.Item>\r\n                <Form.Item label=\"Address\" name=\"address\"   >\r\n                    <TextArea allowClear placeholder=\"Address\" autoSize={{ minRows: 2, maxRows: 6 }} />\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout} style={{ display: 'flex', justifyContent: 'center', marginTop: 40 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        <SaveOutlined />  Update\r\n                 </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Edit;","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Modals\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\PageContent\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Datatable\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\PageHeader\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\Searchbox\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\components\\ActionTools\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\index.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorType\\index.js",["404"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Button, Menu, Dropdown, Popconfirm } from \"antd\"\r\nimport { EditOutlined, MoreOutlined, DeleteOutlined } from \"@ant-design/icons\"\r\n\r\nimport PageContent from \"components/PageContent\"\r\nimport LoadingProgress from \"components/Loading\"\r\nimport FormModal from \"components/Modals\"\r\n\r\nimport Create from \"./Create\"\r\nimport Edit from \"./Edit\"\r\n\r\nimport { showAuthLoader, hideAuthLoader, showModal, hideModal } from \"appRedux/Actions/common\"\r\nimport { requestSaveIndicatorType, requestUpdateIndicatorType, requestDeleteIndicatorType, requestGetIndicatorType } from \"appRedux/Actions/indicator\"\r\n\r\nimport FuzzySearch from 'fuzzy-search';\r\nlet searcher;\r\nconst IndicatorTypes = () => {\r\n    const dispatch = useDispatch()\r\n    const [modalType, setModalType] = useState(false)\r\n    const [detail, setDetail] = useState({})\r\n    const { indicatorTypeLists } = useSelector(({ indicators }) => indicators);\r\n    const { modal, loader } = useSelector(({ common }) => common);\r\n    const { authUser, user } = useSelector(({ auth }) => auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(requestGetIndicatorType({\r\n            del_flg: 0, company_id: user.company_id,\r\n            branch_id: user.branch_id,\r\n        }))\r\n    }, [])\r\n\r\n    const LoadNShowModal = () => {\r\n        dispatch(showAuthLoader())\r\n        dispatch(showModal())\r\n    }\r\n\r\n    const CloseModal = () => dispatch(hideModal())\r\n    const hideModalLoader = () => dispatch(hideAuthLoader())\r\n    const EditDataHandler = record => {\r\n        setModalType(true)\r\n        setDetail(record)\r\n        LoadNShowModal()\r\n    }\r\n\r\n    const DeleteHandler = record => {\r\n        dispatch(showAuthLoader())\r\n        dispatch(requestDeleteIndicatorType(record.id))\r\n    }\r\n    const AddNewHandler = () => {\r\n        setModalType(false)\r\n        LoadNShowModal()\r\n    }\r\n    const SaveHandler = (record) => {\r\n        const data = {\r\n            company_id: user.company_id,\r\n            branch_id: user.branch_id,\r\n            created_user: authUser,\r\n            ...record\r\n        }\r\n        dispatch(showAuthLoader())\r\n        dispatch(requestSaveIndicatorType(data))\r\n    }\r\n    const UpdateHandler = (record) => {\r\n        const data = {\r\n            id: detail.id,\r\n            ...record\r\n        }\r\n        dispatch(showAuthLoader())\r\n        dispatch(requestUpdateIndicatorType(data))\r\n    }\r\n\r\n    const ValidationAlert = errorInfo => {\r\n        // console.log(errorInfo)\r\n    }\r\n\r\n    const [dataSource, setDataSource] = useState([])\r\n    searcher = new FuzzySearch(indicatorTypeLists, [\"indicator_type\"], { caseSensitive: false });\r\n    useEffect(() => {\r\n        const LoadData = async () => {\r\n            setDataSource(await indicatorTypeLists)\r\n        }\r\n        LoadData()\r\n    }, [indicatorTypeLists])\r\n    const OnSearch = (e) => setDataSource(searcher.search(e.target.value))\r\n\r\n    return (\r\n        <div className=\"gx-main-content\">\r\n            <FormModal\r\n                children={\r\n                    <div>\r\n                        <LoadingProgress loading={loader} />\r\n                        {modalType ?\r\n                            <Edit detail={detail} onFinish={UpdateHandler} hideModalLoader={hideModalLoader} onFinishFailed={ValidationAlert}\r\n\r\n                            />\r\n                            :\r\n                            <Create onFinish={SaveHandler} hideModalLoader={hideModalLoader} onFinishFailed={ValidationAlert}\r\n\r\n                            />\r\n                        }\r\n                    </div>\r\n                }\r\n                title={modalType ? \"Edit\" : \"Create\"}\r\n                visible={modal}\r\n                width={600}\r\n                handleCancel={CloseModal}\r\n            />\r\n\r\n\r\n            <PageContent\r\n                OnSearch={OnSearch}\r\n                rowKey=\"id\"\r\n                dataSource={dataSource}\r\n                AddNewHandler={AddNewHandler}\r\n                pageTitle=\"Indicator Type\"\r\n                placeholder=\"Search for Indicator Type\"\r\n                scroll={{ width: 700 }}\r\n                loading={{ spinning: loader, indicator: <LoadingProgress loading={loader} /> }}\r\n                addNewText=\"Indicator Type\"\r\n                columns={[\r\n                    {\r\n                        title: 'ID',\r\n                        dataIndex: 'id',\r\n                        key: 'id',\r\n                        width: 70,\r\n                        fixed: 'left',\r\n                    }, {\r\n                        title: 'Indicator Type',\r\n                        dataIndex: 'indicator_type',\r\n                        key: 'indicator_type',\r\n                    },\r\n                    {\r\n                        title: 'Action',\r\n                        key: 'action',\r\n                        fixed: 'right',\r\n                        width: 70,\r\n                        render: (text, record) => (\r\n                            <span >\r\n                                <Dropdown\r\n                                    //  disabled={sessionStorage.role === \"ADMIN\" ? false : true}\r\n                                    overlay={\r\n                                        (<Menu>\r\n                                            <Menu.Item key=\"1\">\r\n                                                <span className=\"gx-text-blue\" onClick={() => EditDataHandler(record)}>\r\n                                                    <EditOutlined /> Edit\r\n                                            </span>\r\n                                            </Menu.Item>\r\n                                            <Menu.Item key=\"2\">\r\n                                                <Popconfirm\r\n                                                    placement=\"top\"\r\n                                                    title={`Are you sure to delete ${record.indicator_type}?`}\r\n                                                    onConfirm={() => DeleteHandler(record)}\r\n                                                    onCancel={(e) => console.log(e)}\r\n                                                    okText=\"Yes\"\r\n                                                    cancelText=\"No\"\r\n                                                >\r\n                                                    <span className=\"gx-text-red\" >\r\n                                                        <DeleteOutlined /> Delete\r\n                                            </span>\r\n                                                </Popconfirm>\r\n\r\n                                            </Menu.Item>\r\n                                        </Menu>)\r\n                                    } placement=\"bottomRight\" trigger={['click']}>\r\n                                    <Button type=\"primary\" className=\"gx-bg-geekblue\"\r\n                                        shape=\"circle\"\r\n                                        icon={<MoreOutlined style={{ fontWeight: 700 }} />}\r\n                                        size=\"middle\" />\r\n                                </Dropdown>\r\n                            </span>\r\n                        ),\r\n                    },\r\n                ]}\r\n            />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IndicatorTypes;","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorDescription\\index.js",["405"],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorType\\Create.js",["406"],"import React, { useEffect } from 'react';\r\nimport { Form, Button, Input } from \"antd\"\r\nimport { SaveOutlined, } from \"@ant-design/icons\"\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 12,\r\n        span: 12,\r\n    },\r\n};\r\n\r\n\r\nconst Create = ({ onFinish, onFinishFailed, hideModalLoader }) => {\r\n\r\n  \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            hideModalLoader()\r\n        }, 1500);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Form name=\"Add\" onFinish={onFinish} onFinishFailed={onFinishFailed} size=\"large\"\r\n                labelCol={{ span: 6, }} wrapperCol={{ span: 16, }}>\r\n                \r\n                <Form.Item label=\"Indicator Type\" name=\"indicator_type\"\r\n                    rules={[{ required: true, message: 'Please Enter Indicator Type', },]}\r\n                >\r\n                    <Input placeholder=\"Indicator Type\" allowClear />\r\n                </Form.Item>\r\n               \r\n                <Form.Item {...tailLayout} style={{ display: 'flex', justifyContent: 'center', marginTop: 40 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        <SaveOutlined />  Save\r\n                 </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Create;","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorType\\Edit.js",["407"],"import React, { useEffect } from 'react';\r\nimport { Form, Button, Input,  } from \"antd\"\r\nimport { SaveOutlined,  } from \"@ant-design/icons\"\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 12,\r\n        span: 12,\r\n    },\r\n};\r\n\r\nconst Edit = ({ detail, onFinish, onFinishFailed, hideModalLoader, }) => {\r\n    const [form] = Form.useForm();\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            indicator_type: detail.indicator_type,\r\n            \r\n        });\r\n        setTimeout(() => {\r\n            hideModalLoader()\r\n        }, 1500);\r\n    }, [detail])\r\n\r\n    return (\r\n        <div>\r\n            <Form name=\"Edit\" form={form} onFinish={onFinish} onFinishFailed={onFinishFailed} size=\"large\"\r\n                labelCol={{ span: 6, }} wrapperCol={{ span: 16, }}>\r\n                \r\n                <Form.Item label=\"Indicator Type\" name=\"indicator_type\"\r\n                    rules={[{ required: true, message: 'Please Enter Indicator Type', },]}\r\n                >\r\n                    <Input placeholder=\"Indicator Type\" allowClear />\r\n                </Form.Item>\r\n                \r\n                <Form.Item {...tailLayout} style={{ display: 'flex', justifyContent: 'center', marginTop: 40 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        <SaveOutlined />  Update\r\n                 </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Edit;","C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorDescription\\Edit.js",["408"],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\IndicatorDescription\\Create.js",["409"],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\Indicator\\index.js",["410"],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\Indicator\\Create.js",["411"],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\pages\\Indicators\\Indicator\\Edit.js",["412"],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\sagas\\indicator.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\Actions\\indicator.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\api\\indicator.js",[],"C:\\Users\\chip-ethereum\\Desktop\\React Example Projects\\risk-profiler\\src\\appRedux\\reducers\\indicator.js",[],{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","severity":1,"message":"418","line":28,"column":6,"nodeType":"419","endLine":28,"endColumn":8,"suggestions":"420"},{"ruleId":"421","severity":1,"message":"422","line":9,"column":61,"nodeType":"423","messageId":"424","endLine":9,"endColumn":73},{"ruleId":"417","severity":1,"message":"425","line":38,"column":121,"nodeType":"419","endLine":38,"endColumn":124,"suggestions":"426"},{"ruleId":"417","severity":1,"message":"425","line":54,"column":8,"nodeType":"419","endLine":54,"endColumn":11,"suggestions":"427"},{"ruleId":"417","severity":1,"message":"425","line":64,"column":8,"nodeType":"419","endLine":64,"endColumn":11,"suggestions":"428"},{"ruleId":"417","severity":1,"message":"425","line":70,"column":8,"nodeType":"419","endLine":70,"endColumn":11,"suggestions":"429"},{"ruleId":"417","severity":1,"message":"425","line":76,"column":8,"nodeType":"419","endLine":76,"endColumn":11,"suggestions":"430"},{"ruleId":"417","severity":1,"message":"425","line":32,"column":8,"nodeType":"419","endLine":32,"endColumn":10,"suggestions":"431"},{"ruleId":"417","severity":1,"message":"432","line":22,"column":8,"nodeType":"419","endLine":22,"endColumn":10,"suggestions":"433"},{"ruleId":"417","severity":1,"message":"434","line":26,"column":8,"nodeType":"419","endLine":26,"endColumn":16,"suggestions":"435"},{"ruleId":"417","severity":1,"message":"425","line":32,"column":8,"nodeType":"419","endLine":32,"endColumn":10,"suggestions":"436"},{"ruleId":"417","severity":1,"message":"425","line":32,"column":8,"nodeType":"419","endLine":32,"endColumn":10,"suggestions":"437"},{"ruleId":"417","severity":1,"message":"432","line":22,"column":8,"nodeType":"419","endLine":22,"endColumn":10,"suggestions":"438"},{"ruleId":"417","severity":1,"message":"434","line":26,"column":8,"nodeType":"419","endLine":26,"endColumn":16,"suggestions":"439"},{"ruleId":"417","severity":1,"message":"434","line":26,"column":8,"nodeType":"419","endLine":26,"endColumn":16,"suggestions":"440"},{"ruleId":"417","severity":1,"message":"432","line":22,"column":8,"nodeType":"419","endLine":22,"endColumn":10,"suggestions":"441"},{"ruleId":"417","severity":1,"message":"425","line":32,"column":8,"nodeType":"419","endLine":32,"endColumn":10,"suggestions":"442"},{"ruleId":"417","severity":1,"message":"432","line":22,"column":8,"nodeType":"419","endLine":22,"endColumn":10,"suggestions":"443"},{"ruleId":"417","severity":1,"message":"434","line":26,"column":8,"nodeType":"419","endLine":26,"endColumn":16,"suggestions":"444"},"no-native-reassign",["445"],"no-negated-in-lhs",["446"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["447"],"no-unused-vars","'BookOutlined' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch', 'user.branch_id', and 'user.company_id'. Either include them or remove the dependency array.",["448"],["449"],["450"],["451"],["452"],["453"],"React Hook useEffect has a missing dependency: 'hideModalLoader'. Either include it or remove the dependency array. If 'hideModalLoader' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["454"],"React Hook useEffect has missing dependencies: 'form' and 'hideModalLoader'. Either include them or remove the dependency array. If 'hideModalLoader' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["455"],["456"],["457"],["458"],["459"],["460"],["461"],["462"],["463"],["464"],"no-global-assign","no-unsafe-negation",{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"467","fix":"469"},{"desc":"467","fix":"470"},{"desc":"467","fix":"471"},{"desc":"467","fix":"472"},{"desc":"467","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"467","fix":"478"},{"desc":"467","fix":"479"},{"desc":"474","fix":"480"},{"desc":"476","fix":"481"},{"desc":"476","fix":"482"},{"desc":"474","fix":"483"},{"desc":"467","fix":"484"},{"desc":"474","fix":"485"},{"desc":"476","fix":"486"},"Update the dependencies array to be: [dispatch]",{"range":"487","text":"488"},"Update the dependencies array to be: [dispatch, user.branch_id, user.company_id]",{"range":"489","text":"490"},{"range":"491","text":"490"},{"range":"492","text":"490"},{"range":"493","text":"490"},{"range":"494","text":"490"},{"range":"495","text":"490"},"Update the dependencies array to be: [hideModalLoader]",{"range":"496","text":"497"},"Update the dependencies array to be: [detail, form, hideModalLoader]",{"range":"498","text":"499"},{"range":"500","text":"490"},{"range":"501","text":"490"},{"range":"502","text":"497"},{"range":"503","text":"499"},{"range":"504","text":"499"},{"range":"505","text":"497"},{"range":"506","text":"490"},{"range":"507","text":"497"},{"range":"508","text":"499"},[1122,1124],"[dispatch]",[1686,1689],"[dispatch, user.branch_id, user.company_id]",[2207,2210],[2535,2538],[2704,2707],[2877,2880],[1303,1305],[606,608],"[hideModalLoader]",[802,810],"[detail, form, hideModalLoader]",[1330,1332],[1303,1305],[606,608],[802,810],[802,810],[606,608],[1303,1305],[606,608],[802,810]]